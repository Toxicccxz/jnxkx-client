<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on 2016年 八月 31日 星期三, 下午 4:26 -->
<!-- MuClient version 4.94 -->

<!-- Plugin "jnxkx_mapper" generated by Plugin Wizard -->

<muclient>
    <plugin name="jnxkx_mapper"
            author="醉轻侯"
            id="edcf4aa888923fc857b50bd8"
            language="Lua"
            purpose="江南侠客行GPS"
            date_written="2016-08-31 16:24:24"
            requires="4.94"
            version="1.0">
        <description trim="y">
            <![CDATA[
暂时没有
]]>
        </description>

    </plugin>


    <!--  Get our standard constants -->

    <include name="constants.lua"/>

    <!--  Triggers  -->

    <triggers>
        <trigger enabled="y"
                 group="mapper"
                 match="^(&gt; )*([^&gt;;:+-.,]{1,16}) \- $"
                 regexp="y"
                 script="setRoomShortName"
                 sequence="100">
        </trigger>
        <trigger enabled="y"
                 group="mapper"
                 match="^(> )*    这里.*的出口是(.*)$"
                 regexp="y"
                 script="setRoomExits"
                 sequence="100">
        </trigger>
        <trigger enabled="y"
                 group="mapper"
                 match="^(> )*【(.*)地图】"
                 regexp="y"
                 script="setArea"
                 sequence="100">
        </trigger>
    </triggers>

    <aliases>
        <alias script="onDebugInfo" match="^mapper:debugInfo" enabled="y" regexp="y" group="mapper"></alias>
        <alias script="OnHelp" match="^mapper:help" enabled="y" regexp="y" group="mapper"></alias>
        <alias script="onShowRoomInfo" match="^mapper:info\s+(\d+)"  enabled="y" regexp="y" group="mapper"></alias>
        <alias script="onShowPath" match="^mapper:getpath\s+(\d+)\s+(\d+)\s*(\d?)" enabled="y" group="mapper" regexp="y"></alias>
    </aliases>

    <!--  Script  -->


    <script>
        <![CDATA[
require "tprint"
require "copytable"
require "jnxkxmapper"

-- 载入地图数据
local mapperStatus = mapper.open(GetInfo(66) .. 'rooms_all.h')
if (mapperStatus == 0) then
    print "地图数据载入失败"
end

local dbPath = GetInfo(66) .. "mushclient_prefs.sqlite"

-- -----------------------------------------------------------------
-- 房间变动的命令记录
-- -----------------------------------------------------------------
local directionsFullName = {
    north = "n",
    south = "s",
    east = "e",
    west = "w",
    up = "u",
    down = "d",
    northup = "nu",
    southup = "su",
    eastup = "eu",
    westup = "wu",
    northdown = "nd",
    southdown = "sd",
    eastdown = "ed",
    westdown = "wd",
    northeast = "ne",
    northwest = "nw",
    southeast = "se",
    southwest = "sw",
    ['in'] = "in",
    out = "out",
}

local directions = {
    n = "n",
    s = "s",
    e = "e",
    w = "w",
    u = "u",
    d = "d",
    ne = "ne",
    sw = "sw",
    nw = "nw",
    se = "se",
    north = "n",
    south = "s",
    east = "e",
    west = "w",
    up = "u",
    down = "d",
    northup = "nu",
    southup = "su",
    eastup = "eu",
    westup = "wu",
    northdown = "nd",
    southdown = "sd",
    eastdown = "ed",
    westdown = "wd",
    northeast = "ne",
    northwest = "nw",
    southeast = "se",
    southwest = "sw",
    ['in'] = "in",
    out = "out",
}

-- 返回路径
local inverseDir = {
    n = "s",
    s = "n",
    e = "w",
    w = "e",
    u = "d",
    d = "u",
    nu = "sd",
    su = "nd",
    eu = "wd",
    wu = "ed",
    nd = "su",
    sd = "nu",
    ed = "wu",
    wd = "eu",
    ne = "sw",
    sw = "ne",
    nw = "se",
    se = "nw",
    ['in'] = "out",
    out = "in",
}

local lastDir = null
local prevRoom = {}
local currentRoom = {}

function OnPluginInstall()
    forceOpenDB()
end

function OnPluginConnect()
    local lastDir = null
    local prevRoom = {}
    local currentRoom = {}
end

function OnPluginSaveState()
    reopenDB()
end

function OnPluginSent(sText)
    if directions[sText] then
        lastDir = directions[sText]
    end
end

function OnPluginClose()
    closeDB()
end

function OnPluginDisable()
    closeDB()
end

function setArea(name, line, wildcards)
    SendNoEcho("q")
    currentRoom.area = wildcards[2]

    findAndSaveCurrentRoom()
end

function setRoomShortName(name, line, wildcards)
    -- 如果上个命令是方向命令，说明场景发生切换
    if lastDir then
        prevRoom = copytable.deep(currentRoom)

        if prevRoom.rid and prevRoom.exits[lastDir] then
            -- 通过id获取房间
            currentRoom = findRoomByRid(prevRoom.exits[lastDir])
        else
            currentRoom.rid = nil
        end
    end
    -- 更新当前房间的短名
    currentRoom.shortName = wildcards[2]
    SendNoEcho("localmaps")
end

function setRoomExits(name, line, wildcards)
    currentRoom.exitsText = wildcards[2]
end

function findRoomByRid(rid)
    local result = {}
    for row in db:nrows(string.format("SELECT * FROM main.rooms where rid=%d", rid)) do
        result.rid = row.rid
        result.exits = {}
        -- 如果数据存在，那么提取出口信息
        for row in db:nrows(string.format("SELECT * FROM main.paths where from_rid=%d", row.rid)) do
            result.exits[row.dir_cmd] = row.to_rid
        end
    end

    return result
end

function getRoomInfo(rid)
    local result = {}
    for row in db:nrows(string.format("SELECT * FROM main.rooms where rid=%d", rid)) do
        result.rid = row.rid
        result.shortName = row.short_name
        result.areaName = row.area
        result.exits = {}
        -- 如果数据存在，那么提取出口信息
        for row in db:nrows(string.format("SELECT * FROM main.paths where from_rid=%d", row.rid)) do
            local dirCmd = row.dir_cmd
            for row in db:nrows(string.format("SELECT * FROM main.rooms where rid=%d", row.to_rid)) do
                result.exits[dirCmd] = row.short_name .. ' ' .. row.rid
            end
        end
    end

    return result
end

function findRoomByFlag(shortName, exitsText,area)
    local result = {}
    if (area and shortName) then
        if not exitsText then
            exitsText = ''
        end

        local roomFlag = utils.tohex(utils.md5(area .. ' ' .. shortName .. ' ' .. exitsText))

        for row in db:nrows(string.format("SELECT * FROM main.rooms where flag='%s'", roomFlag)) do
            result.rid = row.rid
            result.exits = {}
            -- 如果数据存在，那么提取出口信息
            for row in db:nrows(string.format("SELECT * FROM main.paths where from_rid='%s'", row.rid)) do
                result.exits[row.dir_cmd] = row.to_rid
            end
        end
            --print('---- 当前房间 -----')
            --tprint(currentRoom)
    end

    return result
end

function findAndSaveCurrentRoom()
    if not currentRoom.rid then
        local dbRes = findRoomByFlag(currentRoom.shortName, currentRoom.exitsText, currentRoom.area)

        if dbRes.rid then
            -- 如果数据库中存在，则从数据库中取值覆盖
            currentRoom = dbRes
        else
            -- 如果数据库中不存在，则新建
            if not currentRoom.exitsText then
                currentRoom.exitsText = ''
            end
            local roomFlag = utils.tohex(utils.md5(currentRoom.area .. ' ' .. currentRoom.shortName .. ' ' .. currentRoom.exitsText))
            local existRooms = 0
            for x in db:urows(string.format("SELECT count(*) FROM main.rooms where flag='%s'", roomFlag)) do
                existRooms = x
            end
            if existRooms == 0 then
                local status = assert(db:execute(string.format("INSERT INTO main.rooms (flag, short_name, area) VALUES('%s', '%s', '%s')",
                    roomFlag, currentRoom.shortName, currentRoom.area)))
                currentRoom = findRoomByRid(db:last_insert_rowid())
                if status ~= sqlite3.OK then
                    Note('新建房间发生错误[' .. status .. '] : ' .. db:errmsg())
                else
                    Note('房间已经存入数据')
                    -- findCurrentRoom()
                end
            end
        end
    end

    -- 如果是从其他房间过来的话，需要插入exits数据
    if lastDir then
        for x in db:urows(string.format("SELECT count(*) FROM main.paths where from_rid='%s' and to_rid='%s' and dir_cmd='%s'",
            prevRoom.rid, currentRoom.rid, lastDir)) do

            if x == 0 then
                local status = assert(db:execute(string.format("INSERT INTO main.paths (from_rid, to_rid, dir_cmd) VALUES('%s', '%s', '%s')",
                    prevRoom.rid, currentRoom.rid, lastDir)))

                if status ~= sqlite3.OK then
                    Note('新建路径发生错误[' .. status .. '] : ' .. db:errmsg())
                else
                    Note(string.format("存入路径数据 from: %d to: %d dir_cmd: %s", prevRoom.rid, currentRoom.rid, lastDir))
                end

                for p in db:urows(string.format("SELECT count(*) FROM main.paths where from_rid=%d and to_rid=%d and dir_cmd='%s'", currentRoom.rid, prevRoom.rid, inverseDir[lastDir])) do
                    if p == 0 then
                        status = assert(db:execute(string.format("INSERT INTO main.paths (from_rid, to_rid, dir_cmd) VALUES('%s', '%s', '%s')",
                    currentRoom.rid, prevRoom.rid, inverseDir[lastDir])))
                    end
                end

                if status ~= sqlite3.OK then
                    Note('新建反向路径发生错误[' .. status .. '] : ' .. db:errmsg())
                else
                    Note(string.format("存入反向路径路径数据 from: %d to: %d dir_cmd: %s", currentRoom.rid, prevRoom.rid, inverseDir[lastDir]))
                end
            end
        end

        lastDir = nil
    end
end

function forceOpenDB()
    if db == nill or not db:isopen() then
        db = assert(sqlite3.open(dbPath))
    end
end

function reopenDB()
    if db and db:isopen() then
        db:close()
    end

    db = assert(sqlite3.open(dbPath))
end

function closeDB()
    if db and db:isopen() then
        db:close()
    end
end

function OnHelp()
    world.Note(world.GetPluginInfo(world.GetPluginID(), 3))
end

function onDebugInfo()
    print("====== 当前地图内存信息 ======")
    print("上个房间信息: ")
    tprint(prevRoom)
    print("------------------------------")
    print("当前房间信息: ")
    tprint(currentRoom)
    print("==============================")
end

function onShowRoomInfo(name, line, wildcards)
    print("====== 房间信息查询结果 ======")
   local roomInfo = getRoomInfo(wildcards[1])
   tprint(roomInfo)
   print("==============================")
end

function onShowPath(name, line, wildcards)
    local fly = 0
    if table.getn(wildcards) >=3 and wildcards[3] ~= '' then
        fly = wildcards[3]
    end

    local path = mapper.getpath(wildcards[1],wildcards[2],fly)

    if (path == "") then
        print("未找到可以到达路径")
    else
        print("路径: "..path)
    end
end
        ]]>
    </script>
</muclient>
